import .BGM_eps_test;
import .test_eps_stattext as stat;
var x = 1 << 4;
EUDOnStart(function () { x += x; });
function test_compatibility() {
    static var ret = 0;
    const empty = Db(i2b4(0));
    const cond = Forward();

    py_exec("from helper import *\n\
with expect_eperror():\n\
    Trigger(cond, ret.AddNumber(1 << 0))\n\
with expect_eperror():\n\
    Trigger(empty, ret.AddNumber(1 << 1))\n\
with expect_eperror():\n\
    Trigger(empty + 1, ret.AddNumber(1 << 2))\n\
with expect_eperror():\n\
    SetVariables(ret, -1, EUDVariable(EncodeModifier(SetTo)))\n\
with expect_eperror():\n\
    SetVariables(EUDVariable(), 1)\n\
with expect_eperror():\n\
    SetVariables(f_dwread_epd(0), 1)\n\
pv = PVariable()\n\
with expect_eperror():\n\
    SetVariables(pv[0], 1)\n\
");

    cond.__lshift__(Memory(empty, AtLeast, 1));
    if (cond) { ret += 1 << 3; }
    ret += x;
    if(Is64BitWireframe()) {}
    var z = EUDVariable();
    return ret;
}
